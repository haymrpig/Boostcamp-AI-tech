









































































































































































100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏| 264/265 [05:40<00:01,  1.25s/it]

100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:41<00:00,  1.29s/it]
>>>>>>>>> Validation #1  Accuracy: 65.17%  Average Loss: 0.3752 f1 score: 0.5440
>>>>>>>>> Best performance at epoch: 1
>>>>>>>>> Save model in /opt/ml/baseline/experiments/efficientnet_b3_pruned_multihead22/batch64_focalloss_imgshape300_ReduceLROnPlateau_58change








































































































































































 99%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎ | 263/265 [05:36<00:02,  1.30s/it]

100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:38<00:00,  1.28s/it]
>>>>>>>>> Validation #2  Accuracy: 73.52%  Average Loss: 0.2583 f1 score: 0.6939
>>>>>>>>> Best performance at epoch: 2
>>>>>>>>> Save model in /opt/ml/baseline/experiments/efficientnet_b3_pruned_multihead22/batch64_focalloss_imgshape300_ReduceLROnPlateau_58change








































































































































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:37<00:00,  1.27s/it]
>>>>>>>>> start validation....wait......
  0%|                                                                                                                                                                                                                                        | 0/265 [00:00<?, ?it/s]
>>>>>>>>> Validation #3  Accuracy: 80.34%  Average Loss: 0.1598 f1 score: 0.7658
>>>>>>>>> Best performance at epoch: 3









































































































































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:38<00:00,  1.28s/it]
>>>>>>>>> start validation....wait......
  0%|                                                                                                                                                                                                                                        | 0/265 [00:00<?, ?it/s]
>>>>>>>>> Validation #4  Accuracy: 63.58%  Average Loss: 0.6055 f1 score: 0.5216









































































































































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:38<00:00,  1.28s/it]
>>>>>>>>> start validation....wait......
  0%|                                                                                                                                                                                                                                        | 0/265 [00:00<?, ?it/s]
>>>>>>>>> Validation #5  Accuracy: 75.74%  Average Loss: 0.2055 f1 score: 0.7061












































































































































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:45<00:00,  1.30s/it]
>>>>>>>>> start validation....wait......
  0%|                                                                                                                                                                                                                                        | 0/265 [00:00<?, ?it/s]
>>>>>>>>> Validation #6  Accuracy: 75.21%  Average Loss: 0.4026 f1 score: 0.6749






































































































































































100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏| 264/265 [05:33<00:01,  1.26s/it]

100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:35<00:00,  1.26s/it]
>>>>>>>>> Validation #7  Accuracy: 75.37%  Average Loss: 0.4476 f1 score: 0.7028
>>>>>>>>> earlystopping 게이지 4 / 30








































































































































































100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏| 264/265 [05:36<00:01,  1.28s/it]

100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:37<00:00,  1.27s/it]
>>>>>>>>> Validation #8  Accuracy: 76.64%  Average Loss: 0.4747 f1 score: 0.7117
>>>>>>>>> earlystopping 게이지 5 / 30






































































































 61%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                                                       | 161/265 [03:27<02:13,  1.29s/it]
Traceback (most recent call last):
  File "train.py", line 110, in <module>
    args = args.parse_args()
  File "train.py", line 98, in main
    trainer = MultiHeadTrainer(model, criterion, optimizer, config, dataloaders, device, epoch, lr_scheduler)
  File "/opt/ml/baseline/trainer/trainer.py", line 192, in train
    for i, (imgs, labels) in enumerate(tqdm(self.dataloaders["train"])):
  File "/opt/conda/lib/python3.8/site-packages/tqdm/std.py", line 1171, in __iter__
    for obj in iterable:
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 435, in __next__
    data = self._next_data()
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1068, in _next_data
    idx, data = self._get_data()
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1034, in _get_data
    success, data = self._try_get_data()
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 872, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/opt/conda/lib/python3.8/multiprocessing/queues.py", line 107, in get
    if not self._poll(timeout):
  File "/opt/conda/lib/python3.8/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/opt/conda/lib/python3.8/multiprocessing/connection.py", line 424, in _poll
    r = wait([self], timeout)
  File "/opt/conda/lib/python3.8/multiprocessing/connection.py", line 931, in wait
    ready = selector.select(timeout)
  File "/opt/conda/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt
Traceback (most recent call last):
  File "train.py", line 110, in <module>
    args = args.parse_args()
  File "train.py", line 98, in main
    trainer = MultiHeadTrainer(model, criterion, optimizer, config, dataloaders, device, epoch, lr_scheduler)
  File "/opt/ml/baseline/trainer/trainer.py", line 192, in train
    for i, (imgs, labels) in enumerate(tqdm(self.dataloaders["train"])):
  File "/opt/conda/lib/python3.8/site-packages/tqdm/std.py", line 1171, in __iter__
    for obj in iterable:
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 435, in __next__
    data = self._next_data()
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1068, in _next_data
    idx, data = self._get_data()
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1034, in _get_data
    success, data = self._try_get_data()
  File "/opt/conda/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 872, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/opt/conda/lib/python3.8/multiprocessing/queues.py", line 107, in get
    if not self._poll(timeout):
  File "/opt/conda/lib/python3.8/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/opt/conda/lib/python3.8/multiprocessing/connection.py", line 424, in _poll
    r = wait([self], timeout)
  File "/opt/conda/lib/python3.8/multiprocessing/connection.py", line 931, in wait
    ready = selector.select(timeout)
  File "/opt/conda/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
