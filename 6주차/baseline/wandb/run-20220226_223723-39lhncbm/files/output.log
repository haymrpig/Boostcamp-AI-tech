





































































































































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍| 264/265 [05:29<00:01,  1.22s/it]

100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 265/265 [05:31<00:00,  1.25s/it]
>>>>>>>>> Validation #1  Accuracy: 56.31%  Average Loss: 0.1843 f1 score: 0.3846
>>>>>>>>> Best performance at epoch: 1
>>>>>>>>> Save model in /opt/ml/baseline/experiments/efficientnet_b3_pruned_multihead/batch64_focalloss_imgshape300_ReduceLROnPlateau






  4%|█████▉                                                                                                                                                      | 10/265 [00:14<06:10,  1.45s/it]
Traceback (most recent call last):
  File "train.py", line 102, in <module>
    main(config)
  File "train.py", line 90, in main
    trainer.train()
  File "/opt/ml/baseline/trainer/trainer.py", line 183, in train
    age_out, mask_out, gender_out = self.model(imgs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/ml/baseline/models/model.py", line 338, in forward
    x = self.model.forward_features(x)
  File "/opt/conda/lib/python3.8/site-packages/timm/models/efficientnet.py", line 513, in forward_features
    x = self.blocks(x)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/timm/models/efficientnet_blocks.py", line 118, in forward
    x = self.conv_dw(x)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 765, in __getattr__
    def __getattr__(self, name: str) -> Union[Tensor, 'Module']:
KeyboardInterrupt
Traceback (most recent call last):
  File "train.py", line 102, in <module>
    main(config)
  File "train.py", line 90, in main
    trainer.train()
  File "/opt/ml/baseline/trainer/trainer.py", line 183, in train
    age_out, mask_out, gender_out = self.model(imgs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/ml/baseline/models/model.py", line 338, in forward
    x = self.model.forward_features(x)
  File "/opt/conda/lib/python3.8/site-packages/timm/models/efficientnet.py", line 513, in forward_features
    x = self.blocks(x)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/lib/python3.8/site-packages/timm/models/efficientnet_blocks.py", line 118, in forward
    x = self.conv_dw(x)
  File "/opt/conda/lib/python3.8/site-packages/torch/nn/modules/module.py", line 765, in __getattr__
    def __getattr__(self, name: str) -> Union[Tensor, 'Module']:
KeyboardInterrupt